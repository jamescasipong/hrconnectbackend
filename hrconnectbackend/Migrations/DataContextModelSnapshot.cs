// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hrconnectbackend.Data;

#nullable disable

namespace hrconnectbackend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hrconnectbackend.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<TimeOnly>("ClockIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("ClockOut")
                        .HasColumnType("time");

                    b.Property<DateOnly>("DateToday")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Auth", b =>
                {
                    b.Property<int>("AuthEmpId")
                        .HasColumnType("int");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("VerificationCode")
                        .HasColumnType("int");

                    b.HasKey("AuthEmpId");

                    b.ToTable("Auths");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("hrconnectbackend.Models.EmployeeInfo", b =>
                {
                    b.Property<int>("EmployeeInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("EducationalBackground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeInfoId");

                    b.ToTable("EmployeesInfo");
                });

            modelBuilder.Entity("hrconnectbackend.Models.LeaveApplication", b =>
                {
                    b.Property<int>("LeaveApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveApplicationId"));

                    b.Property<DateOnly>("AppliedDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("leavelType")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("LeaveApplicationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("hrconnectbackend.Models.LeaveApproval", b =>
                {
                    b.Property<int>("LeaveApprovalId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<int>("decision")
                        .HasColumnType("int");

                    b.HasKey("LeaveApprovalId");

                    b.HasIndex("ApproverId");

                    b.ToTable("LeaveApprovals");
                });

            modelBuilder.Entity("hrconnectbackend.Models.OTApplication", b =>
                {
                    b.Property<int>("OTApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OTApplicationId"));

                    b.Property<DateOnly>("AppliedDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Reasons")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("OTApplicationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("OTApplications");
                });

            modelBuilder.Entity("hrconnectbackend.Models.OTApproval", b =>
                {
                    b.Property<int>("OTApprovalId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<int>("decision")
                        .HasColumnType("int");

                    b.HasKey("OTApprovalId");

                    b.HasIndex("ApproverId");

                    b.ToTable("OTApprovals");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayrollId"));

                    b.Property<double>("Bonus")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PayDate")
                        .HasColumnType("date");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("PayrollId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Shift", b =>
                {
                    b.Property<int>("EmployeeShiftId")
                        .HasColumnType("int");

                    b.Property<string>("FirstDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("TimeOut")
                        .HasColumnType("time");

                    b.HasKey("EmployeeShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Attendance", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithMany("Attendance")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Auth", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithOne("Auth")
                        .HasForeignKey("hrconnectbackend.Models.Auth", "AuthEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Department", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithOne("Department")
                        .HasForeignKey("hrconnectbackend.Models.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Employee", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("hrconnectbackend.Models.EmployeeInfo", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithOne("EmployeeInfo")
                        .HasForeignKey("hrconnectbackend.Models.EmployeeInfo", "EmployeeInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.LeaveApplication", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithMany("LeaveApplication")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.LeaveApproval", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Approver")
                        .WithMany("LeaveApproval")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrconnectbackend.Models.LeaveApplication", "LeaveApplication")
                        .WithOne("LeaveApproval")
                        .HasForeignKey("hrconnectbackend.Models.LeaveApproval", "LeaveApprovalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("LeaveApplication");
                });

            modelBuilder.Entity("hrconnectbackend.Models.OTApplication", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithMany("OTApplication")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.OTApproval", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Approver")
                        .WithMany("OTApproval")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hrconnectbackend.Models.OTApplication", "OTApplication")
                        .WithOne("OTApproval")
                        .HasForeignKey("hrconnectbackend.Models.OTApproval", "OTApprovalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("OTApplication");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Payroll", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithMany("Payroll")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Shift", b =>
                {
                    b.HasOne("hrconnectbackend.Models.Employee", "Employee")
                        .WithOne("Shift")
                        .HasForeignKey("hrconnectbackend.Models.Shift", "EmployeeShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hrconnectbackend.Models.Employee", b =>
                {
                    b.Navigation("Attendance");

                    b.Navigation("Auth")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeInfo")
                        .IsRequired();

                    b.Navigation("LeaveApplication");

                    b.Navigation("LeaveApproval");

                    b.Navigation("OTApplication");

                    b.Navigation("OTApproval");

                    b.Navigation("Payroll");

                    b.Navigation("Shift")
                        .IsRequired();
                });

            modelBuilder.Entity("hrconnectbackend.Models.LeaveApplication", b =>
                {
                    b.Navigation("LeaveApproval")
                        .IsRequired();
                });

            modelBuilder.Entity("hrconnectbackend.Models.OTApplication", b =>
                {
                    b.Navigation("OTApproval")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
